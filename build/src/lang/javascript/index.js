"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TreeSitter = require("tree-sitter");
const JavaScript = require("tree-sitter-javascript");
const parser_1 = require("../common/parser");
const visitor_1 = require("./visitor");
const walk_1 = require("../../utils/walk");
/**
 * A class that parses JavaScript comments.
 *
 * # API
 *
 * @class JavaScriptParser
 * @implements IParser
 * @export default
 */
class JavaScriptParser extends parser_1.default {
    constructor(source, options) {
        super(source, options);
        this.parser = new TreeSitter();
        this.parser.setLanguage(JavaScript);
        this.tree_ = this.parser.parse(this.source.text);
    }
    parse() {
        const visitor = new visitor_1.JavaScriptVisitor(this.source);
        const nodes = walk_1.default(this.tree_.rootNode);
        nodes.visit(visitor);
        return visitor.getAST();
    }
    get tree() {
        return this.tree_;
    }
}
exports.default = JavaScriptParser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGFuZy9qYXZhc2NyaXB0L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMENBQTBDO0FBQzFDLHFEQUFxRDtBQUNyRCw2Q0FBc0M7QUFFdEMsdUNBQThDO0FBQzlDLDJDQUFvQztBQUdwQzs7Ozs7Ozs7R0FRRztBQUNILE1BQXFCLGdCQUFpQixTQUFRLGdCQUFNO0lBR2xELFlBQVksTUFBYyxFQUFFLE9BQVk7UUFDdEMsS0FBSyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7UUFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDcEMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFDRCxLQUFLO1FBQ0gsTUFBTSxPQUFPLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbkQsTUFBTSxLQUFLLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDeEMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUNwQixPQUFPLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBQ0QsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Q0FDRjtBQWxCRCxtQ0FrQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUcmVlU2l0dGVyIGZyb20gJ3RyZWUtc2l0dGVyJztcbmltcG9ydCAqIGFzIEphdmFTY3JpcHQgZnJvbSAndHJlZS1zaXR0ZXItamF2YXNjcmlwdCc7XG5pbXBvcnQgUGFyc2VyIGZyb20gJy4uL2NvbW1vbi9wYXJzZXInO1xuaW1wb3J0IFNvdXJjZSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL1NvdXJjZSc7XG5pbXBvcnQgeyBKYXZhU2NyaXB0VmlzaXRvciB9IGZyb20gJy4vdmlzaXRvcic7XG5pbXBvcnQgd2FsayBmcm9tICcuLi8uLi91dGlscy93YWxrJztcbmltcG9ydCBBU1ROb2RlIGZyb20gJy4uLy4uL2ludGVyZmFjZXMvQVNUTm9kZSc7XG5cbi8qKlxuICogQSBjbGFzcyB0aGF0IHBhcnNlcyBKYXZhU2NyaXB0IGNvbW1lbnRzLlxuICogXG4gKiAjIEFQSVxuICogXG4gKiBAY2xhc3MgSmF2YVNjcmlwdFBhcnNlclxuICogQGltcGxlbWVudHMgSVBhcnNlclxuICogQGV4cG9ydCBkZWZhdWx0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEphdmFTY3JpcHRQYXJzZXIgZXh0ZW5kcyBQYXJzZXIge1xuICBwcml2YXRlIHBhcnNlcjogVHJlZVNpdHRlcjtcbiAgcHJpdmF0ZSB0cmVlXzogVHJlZVNpdHRlci5UcmVlO1xuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IFNvdXJjZSwgb3B0aW9uczogYW55KSB7XG4gICAgc3VwZXIoc291cmNlLCBvcHRpb25zKTtcbiAgICB0aGlzLnBhcnNlciA9IG5ldyBUcmVlU2l0dGVyKCk7XG4gICAgdGhpcy5wYXJzZXIuc2V0TGFuZ3VhZ2UoSmF2YVNjcmlwdCk7XG4gICAgdGhpcy50cmVlXyA9IHRoaXMucGFyc2VyLnBhcnNlKHRoaXMuc291cmNlLnRleHQpO1xuICB9XG4gIHBhcnNlKCk6IEFTVE5vZGVbXSB7XG4gICAgY29uc3QgdmlzaXRvciA9IG5ldyBKYXZhU2NyaXB0VmlzaXRvcih0aGlzLnNvdXJjZSk7XG4gICAgY29uc3Qgbm9kZXMgPSB3YWxrKHRoaXMudHJlZV8ucm9vdE5vZGUpO1xuICAgIG5vZGVzLnZpc2l0KHZpc2l0b3IpXG4gICAgcmV0dXJuIHZpc2l0b3IuZ2V0QVNUKCk7XG4gIH1cbiAgZ2V0IHRyZWUgKCk6IFRyZWVTaXR0ZXIuVHJlZSB7XG4gICAgcmV0dXJuIHRoaXMudHJlZV87XG4gIH1cbn0iXX0=