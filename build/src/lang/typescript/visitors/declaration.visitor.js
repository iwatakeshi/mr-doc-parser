"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const log_1 = require("../../../utils/log");
function visitDeclaration(source, node, comment, properties) {
    switch (node.type) {
        case 'interface_declaration':
            return visitInterfaceDeclaration(source, node, comment, properties);
        case 'lexical_declaration':
            return visitLexicalDeclaration(source, node, comment, properties);
        default:
            log_1.default.report(source, node, log_1.ErrorType.NodeTypeNotSupported);
            break;
    }
}
exports.visitDeclaration = visitDeclaration;
function visitInterfaceDeclaration(source, node, comment, properties) {
    console.log(node.children);
}
exports.visitInterfaceDeclaration = visitInterfaceDeclaration;
function visitLexicalDeclaration(source, node, comment, properties) {
    console.log(node.children);
}
exports.visitLexicalDeclaration = visitLexicalDeclaration;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjbGFyYXRpb24udmlzaXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9sYW5nL3R5cGVzY3JpcHQvdmlzaXRvcnMvZGVjbGFyYXRpb24udmlzaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLDRDQUFvRDtBQUlwRCxTQUFnQixnQkFBZ0IsQ0FDNUIsTUFBYSxFQUNiLElBQWdCLEVBQ2hCLE9BQW1CLEVBQ25CLFVBQW1DO0lBRW5DLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNmLEtBQUssdUJBQXVCO1lBQ3hCLE9BQU8seUJBQXlCLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDeEUsS0FBSyxxQkFBcUI7WUFDdEIsT0FBTyx1QkFBdUIsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztRQUN0RTtZQUNJLGFBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxlQUFTLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUN6RCxNQUFNO0tBQ2I7QUFDTCxDQUFDO0FBZkQsNENBZUM7QUFFRCxTQUFnQix5QkFBeUIsQ0FDckMsTUFBYSxFQUNiLElBQWdCLEVBQ2hCLE9BQW1CLEVBQ25CLFVBQW1DO0lBRW5DLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRS9CLENBQUM7QUFSRCw4REFRQztBQUVELFNBQWdCLHVCQUF1QixDQUNuQyxNQUFhLEVBQ2IsSUFBZ0IsRUFDaEIsT0FBbUIsRUFDbkIsVUFBbUM7SUFFbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFFL0IsQ0FBQztBQVJELDBEQVFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ludGF4Tm9kZSB9IGZyb20gXCJ0cmVlLXNpdHRlclwiO1xyXG5pbXBvcnQgeyBOb2RlUHJvcGVydGllcyB9IGZyb20gXCIuLi9Ob2RlXCI7XHJcbmltcG9ydCBJRmlsZSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJmYWNlcy9JRmlsZVwiO1xyXG5pbXBvcnQgbG9nLCB7IEVycm9yVHlwZSB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9sb2dcIjtcclxuXHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHZpc2l0RGVjbGFyYXRpb24oXHJcbiAgICBzb3VyY2U6IElGaWxlLFxyXG4gICAgbm9kZTogU3ludGF4Tm9kZSxcclxuICAgIGNvbW1lbnQ6IFN5bnRheE5vZGUsXHJcbiAgICBwcm9wZXJ0aWVzOiBQYXJ0aWFsPE5vZGVQcm9wZXJ0aWVzPlxyXG4pIHtcclxuICAgIHN3aXRjaCAobm9kZS50eXBlKSB7XHJcbiAgICAgICAgY2FzZSAnaW50ZXJmYWNlX2RlY2xhcmF0aW9uJzpcclxuICAgICAgICAgICAgcmV0dXJuIHZpc2l0SW50ZXJmYWNlRGVjbGFyYXRpb24oc291cmNlLCBub2RlLCBjb21tZW50LCBwcm9wZXJ0aWVzKTtcclxuICAgICAgICBjYXNlICdsZXhpY2FsX2RlY2xhcmF0aW9uJzpcclxuICAgICAgICAgICAgcmV0dXJuIHZpc2l0TGV4aWNhbERlY2xhcmF0aW9uKHNvdXJjZSwgbm9kZSwgY29tbWVudCwgcHJvcGVydGllcyk7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgbG9nLnJlcG9ydChzb3VyY2UsIG5vZGUsIEVycm9yVHlwZS5Ob2RlVHlwZU5vdFN1cHBvcnRlZCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdmlzaXRJbnRlcmZhY2VEZWNsYXJhdGlvbihcclxuICAgIHNvdXJjZTogSUZpbGUsXHJcbiAgICBub2RlOiBTeW50YXhOb2RlLFxyXG4gICAgY29tbWVudDogU3ludGF4Tm9kZSxcclxuICAgIHByb3BlcnRpZXM6IFBhcnRpYWw8Tm9kZVByb3BlcnRpZXM+XHJcbikge1xyXG4gICAgY29uc29sZS5sb2cobm9kZS5jaGlsZHJlbik7XHJcblxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdmlzaXRMZXhpY2FsRGVjbGFyYXRpb24oXHJcbiAgICBzb3VyY2U6IElGaWxlLFxyXG4gICAgbm9kZTogU3ludGF4Tm9kZSxcclxuICAgIGNvbW1lbnQ6IFN5bnRheE5vZGUsXHJcbiAgICBwcm9wZXJ0aWVzOiBQYXJ0aWFsPE5vZGVQcm9wZXJ0aWVzPlxyXG4pIHtcclxuICAgIGNvbnNvbGUubG9nKG5vZGUuY2hpbGRyZW4pO1xyXG5cclxufSJdfQ==