"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Node_1 = require("../Node");
const text_1 = require("../../../utils/text");
const type_visitor_1 = require("./type.visitor");
const match_1 = require("../../../utils/match");
function visitPublicFieldDefinition(source, node, comment) {
    let public_field_definition = node.children;
    let accessibility = 'public', identifier, type_annotation;
    if (match_1.default(public_field_definition[0], 'accessibility_modifier')) {
        accessibility = text_1.text(source, public_field_definition.shift());
    }
    if (match_1.default(public_field_definition[0], 'property_identifier')) {
        identifier = Node_1.createNode(source, public_field_definition.shift());
    }
    if (match_1.default(public_field_definition[0], 'type_annotation')) {
        let type = public_field_definition.shift().children[1];
        type_annotation = type_visitor_1.visitType(source, type);
    }
    return {
        type: 'property',
        context: Node_1.createNode(source, node),
        comment: Node_1.createNode(source, comment, null, true),
        identifier,
        accessibility,
        type_annotation
    };
}
exports.visitPublicFieldDefinition = visitPublicFieldDefinition;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2ZpZWxkX2RlZmluaXRpb24udmlzaXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9sYW5nL3R5cGVzY3JpcHQvdmlzaXRvcnMvcHVibGljX2ZpZWxkX2RlZmluaXRpb24udmlzaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtDQUFxQztBQUVyQyw4Q0FBMkM7QUFDM0MsaURBQTJDO0FBRTNDLGdEQUF5QztBQUV6QyxTQUFnQiwwQkFBMEIsQ0FBQyxNQUFjLEVBQUUsSUFBZ0IsRUFBRSxPQUFtQjtJQUM5RixJQUFJLHVCQUF1QixHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDNUMsSUFBSSxhQUFhLEdBQUcsUUFBUSxFQUMxQixVQUFVLEVBQ1YsZUFBZSxDQUFDO0lBRWxCLElBQUksZUFBSyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQyxFQUFFLHdCQUF3QixDQUFDLEVBQUU7UUFDL0QsYUFBYSxHQUFHLFdBQUksQ0FBQyxNQUFNLEVBQUUsdUJBQXVCLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztLQUMvRDtJQUVELElBQUksZUFBSyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQyxFQUFFLHFCQUFxQixDQUFDLEVBQUU7UUFDNUQsVUFBVSxHQUFHLGlCQUFVLENBQUMsTUFBTSxFQUFFLHVCQUF1QixDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7S0FDbEU7SUFFRCxJQUFJLGVBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsRUFBRSxpQkFBaUIsQ0FBQyxFQUFFO1FBQ3hELElBQUksSUFBSSxHQUFHLHVCQUF1QixDQUFDLEtBQUssRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2RCxlQUFlLEdBQUcsd0JBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDM0M7SUFDRCxPQUFPO1FBQ0wsSUFBSSxFQUFFLFVBQVU7UUFDaEIsT0FBTyxFQUFFLGlCQUFVLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQztRQUNqQyxPQUFPLEVBQUUsaUJBQVUsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7UUFDaEQsVUFBVTtRQUNWLGFBQWE7UUFDYixlQUFlO0tBQ2hCLENBQUE7QUFDSCxDQUFDO0FBMUJELGdFQTBCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZU5vZGUgfSBmcm9tIFwiLi4vTm9kZVwiO1xuaW1wb3J0IHsgU3ludGF4Tm9kZSB9IGZyb20gXCJ0cmVlLXNpdHRlclwiO1xuaW1wb3J0IHsgdGV4dCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy90ZXh0XCI7XG5pbXBvcnQgeyB2aXNpdFR5cGUgfSBmcm9tIFwiLi90eXBlLnZpc2l0b3JcIjtcbmltcG9ydCBTb3VyY2UgZnJvbSBcIi4uLy4uLy4uL2ludGVyZmFjZXMvU291cmNlXCI7XG5pbXBvcnQgbWF0Y2ggZnJvbSBcIi4uLy4uLy4uL3V0aWxzL21hdGNoXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB2aXNpdFB1YmxpY0ZpZWxkRGVmaW5pdGlvbihzb3VyY2U6IFNvdXJjZSwgbm9kZTogU3ludGF4Tm9kZSwgY29tbWVudDogU3ludGF4Tm9kZSkge1xuICBsZXQgcHVibGljX2ZpZWxkX2RlZmluaXRpb24gPSBub2RlLmNoaWxkcmVuO1xuICBsZXQgYWNjZXNzaWJpbGl0eSA9ICdwdWJsaWMnLFxuICAgIGlkZW50aWZpZXIsXG4gICAgdHlwZV9hbm5vdGF0aW9uO1xuXG4gIGlmIChtYXRjaChwdWJsaWNfZmllbGRfZGVmaW5pdGlvblswXSwgJ2FjY2Vzc2liaWxpdHlfbW9kaWZpZXInKSkge1xuICAgIGFjY2Vzc2liaWxpdHkgPSB0ZXh0KHNvdXJjZSwgcHVibGljX2ZpZWxkX2RlZmluaXRpb24uc2hpZnQoKSk7XG4gIH1cblxuICBpZiAobWF0Y2gocHVibGljX2ZpZWxkX2RlZmluaXRpb25bMF0sICdwcm9wZXJ0eV9pZGVudGlmaWVyJykpIHtcbiAgICBpZGVudGlmaWVyID0gY3JlYXRlTm9kZShzb3VyY2UsIHB1YmxpY19maWVsZF9kZWZpbml0aW9uLnNoaWZ0KCkpO1xuICB9XG5cbiAgaWYgKG1hdGNoKHB1YmxpY19maWVsZF9kZWZpbml0aW9uWzBdLCAndHlwZV9hbm5vdGF0aW9uJykpIHtcbiAgICBsZXQgdHlwZSA9IHB1YmxpY19maWVsZF9kZWZpbml0aW9uLnNoaWZ0KCkuY2hpbGRyZW5bMV07XG4gICAgdHlwZV9hbm5vdGF0aW9uID0gdmlzaXRUeXBlKHNvdXJjZSwgdHlwZSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAncHJvcGVydHknLFxuICAgIGNvbnRleHQ6IGNyZWF0ZU5vZGUoc291cmNlLCBub2RlKSxcbiAgICBjb21tZW50OiBjcmVhdGVOb2RlKHNvdXJjZSwgY29tbWVudCwgbnVsbCwgdHJ1ZSksXG4gICAgaWRlbnRpZmllcixcbiAgICBhY2Nlc3NpYmlsaXR5LFxuICAgIHR5cGVfYW5ub3RhdGlvblxuICB9XG59Il19